name: Deploy Cuentas Transaccional AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  ECR_REGISTRY: 425784381978.dkr.ecr.us-east-2.amazonaws.com
  ECR_REPOSITORY: banquito-banco-cuentas
  ECS_CLUSTER: banquito-cluster
  ECS_SERVICE: banquito-banco-cuentas
  CONTAINER_NAME: cuentas-container

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Docker image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo "Building Docker image for $ECR_REPOSITORY..."
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing Docker image..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Register new task definition and deploy
      run: |
        set -euo pipefail
        sudo apt-get update -y && sudo apt-get install -y jq
        echo "Fetching current task definition ARN for $ECS_SERVICE..."
        TD_ARN=$(aws ecs describe-services --cluster "$ECS_CLUSTER" --services "$ECS_SERVICE" --query "services[0].taskDefinition" --output text)
        echo "Current TD: $TD_ARN"
        echo "Downloading current task definition JSON..."
        aws ecs describe-task-definition --task-definition "$TD_ARN" --query "taskDefinition" > td.json
        IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}"
        echo "Rendering new image $IMAGE for container $CONTAINER_NAME..."
        MATCH_COUNT=$(jq --arg CN "$CONTAINER_NAME" '[.containerDefinitions[] | select(.name == $CN)] | length' td.json)
        if [ "$MATCH_COUNT" -eq 0 ]; then
          echo "Warning: container '$CONTAINER_NAME' no encontrado en la task definition. Actualizando el primer contenedor."
          jq --arg IMG "$IMAGE" '
            .containerDefinitions[0].image = $IMG
            | del(.revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy, .taskDefinitionArn)
          ' td.json > td-new.json
        else
          jq --arg CN "$CONTAINER_NAME" --arg IMG "$IMAGE" '
            .containerDefinitions |= map(if .name == $CN then .image = $IMG else . end)
            | del(.revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy, .taskDefinitionArn)
          ' td.json > td-new.json
        fi
        echo "Registering new task definition..."
        NEW_TD_ARN=$(aws ecs register-task-definition --cli-input-json file://td-new.json --query "taskDefinition.taskDefinitionArn" --output text)
        echo "New TD: $NEW_TD_ARN"
        echo "Updating service to new task definition..."
        aws ecs update-service --cluster "$ECS_CLUSTER" --service "$ECS_SERVICE" --task-definition "$NEW_TD_ARN"
        echo "Waiting for service to stabilize..."
        aws ecs wait services-stable --cluster "$ECS_CLUSTER" --services "$ECS_SERVICE"